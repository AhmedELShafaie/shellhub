name: Build Agent

on:
  push:
    branches: [ master ]
    tags:
      - v*
    paths:
    - 'agent/**'

  pull_request:
    branches: [ master ]
    paths:
    - 'agent/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2


      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Set github reference env
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}
      
      - name: build AMD64 image
        run: |
          docker buildx build --push -f agent/Dockerfile.amd64 \
            --tag shellhubio/agent:${{ github.sha }}-amd64 \
            --platform linux/amd64 .

      - name: Apply github tag to AMD64 image
        if: contains(github.ref, 'refs/tags/v')
        run: |
          docker pull shellhubio/agent:${{ github.sha }}-amd64 \
          && docker tag shellhubio/agent:${{ github.sha }}-amd64 shellhubio/agent:${{ env.RELEASE_VERSION }}-amd64 \
          && docker push shellhubio/agent:${{ env.RELEASE_VERSION }}-amd64

      - name: build arm32v6 image
        run: |
          docker buildx build --push -f agent/Dockerfile.arm32v6 \
            --tag shellhubio/agent:${{ github.sha }}-arm32v6 \
            --platform linux/arm .

      - name: Apply github tag to arm32v6 image
        if: contains(github.ref, 'refs/tags/v')
        run: |
          docker pull shellhubio/agent:${{ github.sha }}-arm32v6 \
          && docker tag shellhubio/agent:${{ github.sha }}-arm32v6 shellhubio/agent:${{ env.RELEASE_VERSION }}-arm32v6 \
          && docker push shellhubio/agent:${{ env.RELEASE_VERSION }}-arm32v6
      
      - name: build arm64v8 image
        run: |
          docker buildx build --push -f agent/Dockerfile.arm64v8 \
            --tag shellhubio/agent:${{ github.sha }}-arm64v8 \
            --platform linux/arm64 .

      - name: Apply github tag to arm64v8 image
        if: contains(github.ref, 'refs/tags/v')
        run: |
          docker pull shellhubio/agent:${{ github.sha }}-arm64v8 \
          && docker tag shellhubio/agent:${{ github.sha }}-arm64v8 shellhubio/agent:${{ env.RELEASE_VERSION }}-arm64v8 \
          && docker push shellhubio/agent:${{ env.RELEASE_VERSION }}-arm64v8

      - name: build multiarch image
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          docker manifest create -a shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-amd64 \
          && docker manifest annotate shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-amd64 --os linux --arch amd64 \
          && docker manifest create -a shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-arm32v6 \
          && docker manifest annotate shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-arm32v6 --os linux --arch arm \
          && docker manifest create -a shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-arm64v8 \
          && docker manifest annotate shellhubio/agent:${{ github.sha }} shellhubio/agent:${{ github.sha }}-arm64v8 --os linux --arch arm64 \
          && docker manifest push shellhubio/agent:${{ github.sha }}

      - name: build multiarch image from github tag
        if: contains(github.ref, 'refs/tags/v')
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          docker manifest create -a shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-amd64 \
          && docker manifest annotate shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-amd64 --os linux --arch amd64 \
          && docker manifest create -a shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-arm32v6 \
          && docker manifest annotate shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-arm32v6 --os linux --arch arm \
          && docker manifest create -a shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-arm64v8 \
          && docker manifest annotate shellhubio/agent:${{ env.RELEASE_VERSION }} shellhubio/agent:${{ env.RELEASE_VERSION }}-arm64v8 --os linux --arch arm64 \
          && docker manifest push shellhubio/agent:${{ env.RELEASE_VERSION }}
